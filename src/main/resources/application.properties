spring.application.name=user-service
server.port=8080
# Connection url for the database
spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=hotel_db;encrypt=true;trustServerCertificate=true

# MySQL username and password 
spring.datasource.username=sa
spring.datasource.password=1
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.dbcp.test-while-idle=true
spring.datasource.dbcp.validation-query=SELECT 1

# JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=create

# Naming strategy
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServerDialect

# Swagger (Springdoc)
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operations-sorter=method
#http://localhost:8080/swagger-ui.html

#Security infomations
apps.security.secret=ThisIsA256BitSecretKeyForJWTs123456!
apps.security.token-prefix= Bearer
apps.security.header-string= Authorization
apps.security.jwtExpirationMs = 18000000
apps.security.refreshJwtExpirationMs =7200000


eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false
spring.cloud.compatibility-verifier.enabled=false